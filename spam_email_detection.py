# -*- coding: utf-8 -*-
"""spam_email_detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12U_ZSbQMtY3JnzCC91KKiiWbs5FvX_rR

Step 1: Install Required Libraries
"""

!pip install scikit-learn pandas --quiet

"""Step 2: Import Libraries"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

"""Step 3: Upload and Load Dataset"""

from google.colab import files
uploaded = files.upload()

"""Load spam.csv (download from Kaggle SMS Spam Collection Dataset)"""

df = pd.read_csv("spam.csv", encoding='latin-1')[['v1', 'v2']]
df.columns = ['label', 'message']
df['label_num'] = df['label'].map({'ham': 0, 'spam': 1})

"""Step 4: Prepare Features and Labels"""

X = df['message']
y = df['label_num']

"""Step 5: Split into Training and Testing Sets"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Step 6: Vectorize Text Data"""

vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

"""Step 7: Train Naive Bayes Classifier"""

model = MultinomialNB()
model.fit(X_train_vec, y_train)

"""Step 8: Evaluate Model"""

y_pred = model.predict(X_test_vec)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

"""Step 9: Predict Custom Message"""

def predict_message(msg):
    vec = vectorizer.transform([msg])
    pred = model.predict(vec)
    return "Spam" if pred[0] == 1 else "Not Spam"

"""# Try your own message"""

msg = input("Enter a message to test: ")
print("Prediction:", predict_message(msg))

